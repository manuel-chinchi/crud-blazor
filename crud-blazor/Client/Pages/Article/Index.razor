@page "/articles"
@inject HttpClient Http
@inject SweetAlertService Swal

<h3>Articles</h3>
<a class="btn btn-primary" href="article-create"><span class="oi oi-plus mr-2"></span>Create</a>
<br />
<br />

@if (articles == null)
{
    <p>Loading items...</p>
}
else if (articles.Length == 0)
{
    <p>No items</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                @*<th>Created Date</th>
                <th>Updated Date</th>*@
                <th>Category</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var article in articles)
            {
                <tr>
                    <td>@article.Id</td>
                    <td>@article.Name</td>
                    @*<td>@article.CreatedDate.ToShortDateString()</td>
                    <td>@(article.UpdatedDate != null? article.CreatedDate.ToShortDateString() : "-") </td>*@
                    <td>@article.Category.Name</td>
                    <td>
                        <a class="btn btn-success" href="article-edit/@article.Id"><span class="oi oi-pencil mr-2"></span>Edit</a>
                        <button class="btn btn-danger" @onclick="@(()=>DeleteArticle(@article.Id))"><span class="oi oi-delete mr-2"></span>Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    Article[] articles;

    protected override async Task OnInitializedAsync()
    {
        await LoadArticles();
    }

    async Task LoadArticles()
    {
        articles = await Http.GetFromJsonAsync<Article[]>("Article");
    }

    async Task DeleteArticle(int id)
    {
        Article a = await Http.GetFromJsonAsync<Article>($"Article/{id}");
        var result = await Swal.FireAsync(new SweetAlertOptions()
        {
            Title = "Confirmar",
            Text = $"¿Desea borrar el elemento \"{a.Name}\"?",
            Icon = SweetAlertIcon.Warning,
            ConfirmButtonText = "Sí",
            CancelButtonText = "No",
            ShowCancelButton = true
        });

        if (!string.IsNullOrEmpty(result.Value))
        {
            await Http.DeleteAsync($"Article/{id}");
            await LoadArticles();
        }
    }
}
